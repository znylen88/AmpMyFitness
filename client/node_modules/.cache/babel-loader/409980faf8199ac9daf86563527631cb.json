{"ast":null,"code":"var _jsxFileName = \"/Users/z/Desktop/AMPY/client/src/components/LoginForm.jsx\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nvar LoginForm = function LoginForm(_ref) {\n  var onSubmit = _ref.onSubmit,\n      onChange = _ref.onChange,\n      errors = _ref.errors,\n      user = _ref.user,\n      successMessage = _ref.successMessage,\n      toggleAuthenticateStatus = _ref.toggleAuthenticateStatus;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      height: 'calc(100vh)',\n      backgroundImage: \"url(/images/login.jpg)\",\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    xs: 10,\n    sm: 7,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      padding: \"20px\",\n      paddingTop: \"30px\",\n      opacity: \".9\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    action: \"/\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    class: \"display-4\",\n    style: {\n      fontSize: \"250%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Welcome\"), React.createElement(AccountCircleIcon, {\n    style: {\n      fontSize: \"60px\",\n      marginBottom: \"30px\",\n      marginTop: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), successMessage && React.createElement(\"p\", {\n    className: \"success-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, successMessage), errors.summary && React.createElement(\"p\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, errors.summary), React.createElement(TextField, {\n    style: {\n      width: \"80%\"\n    },\n    placeholder: \"Email\",\n    name: \"email\",\n    error: errors.email,\n    helperText: errors.email || null,\n    onChange: onChange,\n    value: user.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    style: {\n      width: \"80%\"\n    },\n    placeholder: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    onChange: onChange,\n    error: errors.password,\n    value: user.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" \"), React.createElement(\"div\", {\n    className: \"button-line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Button, {\n    style: {\n      margin: \"10px\",\n      marginLeft: \"0\",\n      backgroundColor: \"#c62828\",\n      color: \"white\"\n    },\n    type: \"submit\",\n    variant: \"contained\",\n    children: \"Log in\",\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Don't have an account? \", React.createElement(Link, {\n    to: '/signup',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Create one\"), \".\")))))));\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  successMessage: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/z/Desktop/AMPY/client/src/components/LoginForm.jsx"],"names":["React","Fragment","PropTypes","Link","Button","TextField","AccountCircleIcon","Card","Typography","Grid","LoginForm","onSubmit","onChange","errors","user","successMessage","toggleAuthenticateStatus","height","backgroundImage","backgroundSize","backgroundPosition","display","flexDirection","justifyContent","textAlign","padding","paddingTop","opacity","fontSize","marginBottom","marginTop","summary","width","email","password","margin","marginLeft","backgroundColor","color","propTypes","func","isRequired","object","string"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst LoginForm = ({\n  onSubmit,\n  onChange,\n  errors,\n  user,\n  successMessage,\n  toggleAuthenticateStatus\n}) => (\n\n    <Fragment>\n      <div style={{ height: 'calc(100vh)', backgroundImage: `url(/images/login.jpg)`, backgroundSize: 'cover', backgroundPosition: 'center', display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\n        <Grid container justify = \"center\" style={{ textAlign: \"center\" }}>\n            <Grid xs={10} sm={7} md={4}>\n              <Card style={{ padding: \"20px\", paddingTop: \"30px\", opacity: \".9\" }}>\n                <form action=\"/\" onSubmit={onSubmit} >\n                  <h6 class=\"display-4\" style={{ fontSize: \"250%\" }}>Welcome</h6>\n                  <AccountCircleIcon style={{ fontSize: \"60px\", marginBottom: \"30px\", marginTop: \"20px\" }} />\n                  <br></br>\n                  {successMessage && <p className=\"success-message\">{successMessage}</p>}\n                  {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\n                  <TextField style={{ width: \"80%\" }} placeholder=\"Email\"\n                    name=\"email\"\n                    error={errors.email}\n                    helperText={errors.email || null}\n                    onChange={onChange}\n                    value={user.email}> </TextField>\n                  <br></br>\n                  <br></br>\n                  <TextField style={{ width: \"80%\" }} placeholder=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={onChange}\n                    error={errors.password}\n                    value={user.password}> </TextField>\n                  <div className=\"button-line\">\n                    <br></br>\n                    <Button style={{ margin: \"10px\", marginLeft: \"0\", backgroundColor: \"#c62828\", color: \"white\" }} type=\"submit\" variant=\"contained\" children=\"Log in\" primary />\n                  </div>\n                  <br></br>\n                  <Typography >Don't have an account? <Link to={'/signup'}>Create one</Link>.</Typography>\n                </form>\n                </Card>\n            </Grid>\n            </Grid>\n      </div>\n    </Fragment>\n\n  );\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  successMessage: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default LoginForm;\n\n"]},"metadata":{},"sourceType":"module"}