{"ast":null,"code":"import _classCallCheck from \"/Users/z/Desktop/AMPY/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/z/Desktop/AMPY/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/z/Desktop/AMPY/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/z/Desktop/AMPY/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/z/Desktop/AMPY/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/z/Desktop/AMPY/client/src/components/LoggedInButtonAppBar/index.js\";\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport API from '../../utils/API';\nimport Auth from '../../utils/Auth';\nimport TemporaryDrawer from '../TemporaryDrawer/TemporaryDrawer';\nimport IconButton from '@material-ui/core/IconButton';\n\nvar LoggedInButtonAppBar = /*#__PURE__*/function (_React$Component) {\n  _inherits(LoggedInButtonAppBar, _React$Component);\n\n  function LoggedInButtonAppBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoggedInButtonAppBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoggedInButtonAppBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      secretData: '',\n      user: {}\n    };\n    return _this;\n  }\n\n  _createClass(LoggedInButtonAppBar, [{\n    key: \"componentDidMount\",\n\n    /**\n     * This method will be executed after initial rendering.\n     */\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.dashboard(Auth.getToken()).then(function (res) {\n        _this2.setState({\n          secretData: res.data.message,\n          user: res.data.user\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          flexGrow: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        color: \"secondary\",\n        style: {\n          backgroundColor: \"#a52828\",\n          height: \"90px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        edge: \"start\",\n        color: \"inherit\",\n        \"aria-label\": \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(TemporaryDrawer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        style: {\n          flexGrow: 1,\n          marginLeft: \"25px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"images/logo.png\",\n        style: {\n          width: \"80px\",\n          height: \"auto\",\n          margin: \"0\",\n          position: \"absolute\",\n          top: \"53%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          margin: \"0\",\n          position: \"absolute\",\n          top: \"65%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          backgroundColor: \"#202527\",\n          fontSize: \"16px\",\n          padding: \"3px\",\n          paddingTop: \"5px\",\n          paddingLeft: \"15px\",\n          paddingRight: \"15px\",\n          opacity: \".9\",\n          borderRadius: \"10px\",\n          fontWeight: \"lighter\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"AMP MY FITNESS\")), React.createElement(Button, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(AccountCircleIcon, {\n        fontSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), \"\\xA0\\xA0\", this.state.user.name))));\n    }\n  }]);\n\n  return LoggedInButtonAppBar;\n}(React.Component);\n\nexport default LoggedInButtonAppBar;","map":{"version":3,"sources":["/Users/z/Desktop/AMPY/client/src/components/LoggedInButtonAppBar/index.js"],"names":["React","AppBar","Toolbar","Typography","Button","AccountCircleIcon","API","Auth","TemporaryDrawer","IconButton","LoggedInButtonAppBar","state","secretData","user","dashboard","getToken","then","res","setState","data","message","flexGrow","backgroundColor","height","marginLeft","width","margin","position","top","left","transform","fontSize","padding","paddingTop","paddingLeft","paddingRight","opacity","borderRadius","fontWeight","color","name","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\nimport API from '../../utils/API';\nimport Auth from '../../utils/Auth';\nimport TemporaryDrawer from '../TemporaryDrawer/TemporaryDrawer';\nimport IconButton from '@material-ui/core/IconButton'\n\nclass LoggedInButtonAppBar extends React.Component {\n  state = {\n    secretData: '',\n    user: {}\n  }\n\n  /**\n   * This method will be executed after initial rendering.\n   */\n  componentDidMount() {\n    API.dashboard(Auth.getToken())\n      .then(res => {\n        this.setState({\n          secretData: res.data.message,\n          user: res.data.user\n        });\n      })\n  }\n\n\n  render() {\n    return (\n      <div style={{ flexGrow: 1 }}>\n        <AppBar position=\"static\" color=\"secondary\" style={{ backgroundColor: \"#a52828\", height: \"90px\" }}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n              <TemporaryDrawer />\n            </IconButton>\n            <Typography variant=\"h5\" align=\"center\" style={{ flexGrow: 1, marginLeft: \"25px\" }}>\n            <img src=\"images/logo.png\" style={{ width: \"80px\", height: \"auto\", margin: \"0\", position: \"absolute\", top: \"53%\", left: \"50%\", transform: \"translate(-50%, -50%)\" }}/>\n            <div style={{ margin: \"0\", position: \"absolute\", top: \"65%\", left: \"50%\", transform: \"translate(-50%, -50%)\", backgroundColor: \"#202527\", fontSize: \"16px\", padding: \"3px\", paddingTop: \"5px\", paddingLeft: \"15px\", paddingRight: \"15px\", opacity: \".9\", borderRadius: \"10px\", fontWeight: \"lighter\" }} >AMP MY FITNESS\n            </div>\n            </Typography>\n            <Button style={{ color: \"white\" }}><AccountCircleIcon fontSize=\"large\" />&nbsp;&nbsp;{this.state.user.name}</Button>\n          </Toolbar>\n        </AppBar>\n      </div>)\n  }\n}\n\nexport default LoggedInButtonAppBar;\n\n\n"]},"metadata":{},"sourceType":"module"}